name: ci

on: [push]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py-version:
          - "2.7"
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "pypy2"
          - "pypy3"
        py-arch:
#          - x86
          - x64
        mpi:
          - mpich
#          - openmpi
          - msmpi
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - os: ubuntu-latest
            py-arch: x86
          - os: ubuntu-latest
            mpi: msmpi
          - os: macos-latest
            py-version: pypy2
          - os: macos-latest
            py-version: pypy3
          - os: macos-latest
            py-arch: x86
          - os: macos-latest
            mpi: msmpi
          - os: windows-latest
            mpi: mpich
          - os: windows-latest
            mpi: openmpi
          - os: windows-latest
            py-version: pypy2

    steps:

    - name: Configure hostname
      if:   runner.os == 'Linux' || runner.os == 'macOS'
      run:  echo 127.0.0.1 `hostname` | sudo tee -a /etc/hosts > /dev/null

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Use Python ${{ matrix.py-version }} ${{ matrix.py-arch }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py-version }}
        architecture: ${{ matrix.py-arch }}

    - name: Install packaging tools
      run:  python -m pip install --upgrade setuptools pip wheel
    - name: Install build dependencies
      run:  python -m pip install --upgrade cython
    - name: Build package
      run:  python -m pip wheel -vvv --wheel-dir=dist .
    - name: Upload package artifacts
      uses: actions/upload-artifact@v1
      with:
        name: pybnb-py${{matrix.py-version}}-${{matrix.py-arch}}-${{matrix.mpi}}-${{matrix.os}}
        path: dist

    - name: Install test dependencies
      run:  python -m pip install --upgrade -r ./test_requirements.txt
    - name: Install package for testing
      run:  python -m pip install --no-index --find-links=dist pybnb
    - name: Sanity test
      run:  mpiexec python -c "import mpi4py.MPI; print(mpi4py.MPI.COMM_WORLD.rank)"
    - name: Parallel tests
      run: |
        which mpiexec
        python run-mpitests.py --mpirun='`which mpiexec`' --no-build --with-coverage -v
        coverage report
    - name: Uninstall package after testing
      run:  python -m pip uninstall --yes pybnb

  lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Python
      uses: actions/setup-python@v2
      with:
        python-version: 3

    - name: Install base dependencies
      run:  python -m pip install -r ./requirements.txt

    - name: Install package
      run:  python -m pip install .

    - name: Install lint dependencies
      run:  python -m pip install
              pycodestyle
              pydocstyle
              flake8
              pylint
              mypy
              types-PyYAML
              types-six

    - name: pycodestyle
      run:  pycodestyle src/pybnb

#    - name: pydocstyle
#      run:  pydocstyle src/pybnb

    - name: flake8
      run:  flake8 src/pybnb

#    - name: pylint
#      run:  pylint pybnb

    - name: mypy (typecheck)
      run:  mypy src/pybnb
