name: ci

on: [push]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py-version:
          - "2.7"
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "pypy2"
          - "pypy3"
        py-arch:
          - x86
          - x64
        mpi:
          - mpich
          - openmpi
          - msmpi
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            mpicmd: "mpirun -n 4"
            examples_arg: "--run-examples"
            ideas_ipopt: "2.4.3/idaes-solvers-ubuntu2004-64.tar.gz"
          - os: macos-latest
            mpicmd: "mpirun -n 4"
            examples_arg: "--run-examples"
          - os: windows-latest
            mpicmd: "mpiexec.exe -n 4"
            examples_arg: ""
        exclude:
          - os: ubuntu-latest
            py-arch: x86
          - os: ubuntu-latest
            mpi: msmpi
          - os: macos-latest
            py-version: pypy2
          - os: macos-latest
            py-version: pypy3
          - os: macos-latest
            py-arch: x86
          - os: macos-latest
            mpi: msmpi
          - os: windows-latest
            mpi: mpich
          - os: windows-latest
            mpi: openmpi
          - os: windows-latest
            py-version: pypy2
          - os: windows-latest
            py-version: pypy3

    steps:

    - name: Configure hostname
      if:   runner.os == 'Linux' || runner.os == 'macOS'
      run:  echo 127.0.0.1 `hostname` | sudo tee -a /etc/hosts > /dev/null
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}
    - name: Use Python ${{ matrix.py-version }} ${{ matrix.py-arch }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py-version }}
        architecture: ${{ matrix.py-arch }}
    - name: Install packaging tools
      run:  python -m pip install -U setuptools pip wheel
    - name: Install test dependencies
      run:  python -m pip install -U -r ./test_requirements.txt
    - name: Install package for testing
      run: |
        python setup.py develop
        python -m pip list
    - name: Install Ipopt
      if: startsWith(matrix.os,'ubuntu')
      run: |
        IPOPT_DIR="${GITHUB_WORKSPACE}/ipopt"
        echo "$IPOPT_DIR" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$IPOPT_DIR" >> $GITHUB_ENV
        mkdir -p $IPOPT_DIR
        curl --max-time 150 --retry 8 \
          -L https://github.com/IDAES/idaes-ext/releases/download/${{ matrix.ideas_ipopt }} \
          > $IPOPT_DIR/ipopt.tar.gz
        cd $IPOPT_DIR
        tar -xvf ipopt.tar.gz
    - name: MPI Sanity tests
      run:  mpiexec python -c "import mpi4py.MPI; print(mpi4py.MPI.COMM_WORLD.rank)"
    - name: Serial tests (slim)
      run: |
        pytest -v --cov=pybnb --cov=examples --cov=src/tests --cov-report="" ${{ matrix.examples_arg }} -v
        mv .coverage .coverage.pybnb.slim_serial
    - name: Install extras
      run: |
        python -m pip install PyYAML || echo failed to install yaml
        python -m pip install pyomo || echo failed to install pyomo
        python -m pip install numpy || echo failed to install numpy
        python -m pip install numba || echo failed to install numba
        python -m pip install dill || echo failed to install dill
    - name: Serial tests
      run: |
        pytest -v --cov=pybnb --cov=examples --cov=src/tests --cov-report="" ${{ matrix.examples_arg }} -v
        mv .coverage .coverage.pybnb.serial
    - name: Parallel tests (no coverage)
      run: python run-mpitests.py --mpirun="${{ matrix.mpicmd }}" --no-build -v
    - name: Parallel tests (coverage)
      if: matrix.os != 'windows-latest'
      run: |
        python run-mpitests.py --mpirun="${{ matrix.mpicmd }}" --no-build --with-coverage -v
        mv .coverage .coverage.pybnb.parallel
        ls .coverage*
    - name: Coverage report
      run: |
        coverage combine
        coverage report
    - name: Coverage upload
      uses: codecov/codecov-action@v1
    - name: Uninstall package after testing
      run:  python -m pip uninstall --yes pybnb

  no_mpi:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Python
      uses: actions/setup-python@v2
      with:
        python-version: 3
    - name: Install packaging tools
      run:  python -m pip install -U setuptools pip wheel
    - name: Install base dependencies
      run:  python -m pip install -U -r ./requirements.txt
    - name: Install serial test dependencies
      run: |
        python -m pip install -U coverage pytest pytest-coverage
        python -m pip install -U -r ./example_requirements.txt
    - name: Install package
      run:  |
        python -m pip install .
        python -m pip list
    - name: Serial tests
      run: |
        pytest -v --cov=pybnb --cov=examples --cov=src/tests --cov-report="" --run-examples -v
    - name: Coverage report
      run: coverage report
    - name: Coverage upload
      uses: codecov/codecov-action@v1

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Python
      uses: actions/setup-python@v2
      with:
        python-version: 3
    - name: Install base dependencies
      run:  python -m pip install -r ./requirements.txt
    - name: Install package
      run:  python -m pip install .
    - name: Install lint dependencies
      run:  python -m pip install
              pycodestyle
              pydocstyle
              flake8
              pylint
              mypy
              PyYAML
              types-PyYAML
              types-six
              pytest
              pytest-doctestplus
    - name: doctest
      run: pytest -v --doctest-plus --doctest-ignore-import-errors src/pybnb
    - name: pycodestyle
      run:  pycodestyle src/pybnb
#    - name: pydocstyle
#      run:  pydocstyle src/pybnb
    - name: flake8
      run:  flake8 src/pybnb
#    - name: pylint
#      run:  pylint pybnb
    - name: mypy (typecheck)
      run:  mypy src/pybnb
